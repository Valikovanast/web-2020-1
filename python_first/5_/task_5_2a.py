# -*- coding: utf-8 -*-
"""
Задание 5.2a

Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети,
надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску, как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):
* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:
* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.195/28 - хост из сети 10.0.5.192/28

Если пользователь ввел адрес 10.0.1.1/24,
вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях хост/маска, например:
    10.0.5.195/28, 10.0.1.1/24

Подсказка:
Есть адрес хоста в двоичном формате и маска сети 28. Адрес сети это первые 28 бит адреса хоста + 4 ноля.
То есть, например, адрес хоста 10.1.1.195/28  в двоичном формате будет
bin_ip = "00001010000000010000000111000011"

А адрес сети будет первых 28 символов из bin_ip + 0000 (4 потому что всего в адресе может быть 32 бита, а 32 - 28 = 4)
00001010000000010000000111000000

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""
net= input('Введите IP-сети (10.1.1.0/24): ')
net=net.split('.')
masko=net[3].split('/')
mask1=masko[1]
mask=masko[1]
mask=int(mask)*"1"+"0"*(32-int(mask))
mask2=mask[:8]
mask3=mask[8:16]
mask4=mask[16:24]
mask5=mask[24:]
net0=bin(int(net[0])&int(mask2,2))[2:]
net[0]=int(net0,2)
net1=bin(int(net[1])&int(mask3,2))[2:]
net[1]=int(net1,2)
net2=bin(int(net[2])&int(mask4,2))[2:]
net[2]=int(net2,2)
net3=bin(int(masko[0])&int(mask5,2))[2:]
net[3]=int(net3,2)
print("Network:\n"+'{:d}\t\t{:d}\t\t{:d}\t\t{:d}\n'.format(int(net0,2),int(net1,2),int(net2,2),int(net3,2))+'{:08b}\t{:08b}\t{:08b}\t{:08b}\n\n'.format(int(net[0]),int(net[1]),int(net[2]),int(net[3]))+
"Mask:\n/"+mask1+'\n{:d}\t\t{:d}\t\t{:d}\t\t{:d}\n'.format(int(mask2,2),int(mask3,2),int(mask4,2),int(mask5,2))+
mask2+"\t"+mask3+"\t"+mask4+"\t"+mask5+"\n")